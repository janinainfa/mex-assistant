# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build with Pyinstaller
      run: |
          pip install pyinstaller
          pyinstaller --onefile --name mex-assistant main.py
    - name: Download linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage

    - name: Create AppDir
      run: |
        mkdir -p AppDir/usr/bin
        cp dist/mex-assistant AppDir/usr/bin/
        # Dodaj inne pliki, jeśli są potrzebne, np. ikony, pliki desktop, itp.

    - name: Copy icon and desktop file
      run: |
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
        cp mex-assistant.desktop AppDir/mex-assistant.desktop
        cp icon.jpg AppDir/usr/share/icons/hicolor/256x256/apps/mex-assistant.jpg

    - name: Create Appimage
      run: |
        sudo add-apt-repository universe
        sudo apt install libfuse2
        ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage

    - name: Save artifact
      uses: actions/upload-artifact@v2
      with:
        name: mex-assistant.AppImage
        path: mex-assistant-*.AppImage  # Zakładając, że AppImage będzie miało nazwę z wersją

      
